version: "3"

volumes:
  MONGODB_DATA : {}
  MONGODB_LOGS : {}
  ELASTICSEARCH_DATA: {}
  ELASTICSEARCH_LOGS: {}
  ELASTICSEARCH_LOG_CONFIG: {} #"./elasticsearch/logging.yml"
  REDIS_MASTER_DATA : {}
  REDIS_SLAVE_DATA : {}
  REDIS_LOGS : {}
  SQL_DATA: {}


services:
  mongo-rs0-3:
    image: mongo:3.0.6
    hostname: mongo-rs0-3
    container_name: mongo-rs3
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs0", "--journal", "--smallfiles", "--rest", "--httpinterface" ]
    ports:
      - "27019:27017"
      - "28019:28017"
    restart: always

  mongo-rs0-2:
    image: mongo:3.0.6
    hostname: mongo-rs0-2
    container_name: mongo-rs2
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs0", "--journal", "--smallfiles", "--rest", "--httpinterface" ]
    ports:
      - "27018:27017"
      - "28018:28017"
    restart: always

  mongo-rs0-1:
    image: mongo:3.0.6
    hostname: mongo-rs0-1
    container_name: mongo-rs1
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs0", "--journal", "--smallfiles", "--rest", "--httpinterface" ]
    ports:
      - "27017:27017"
      - "28017:28017"
    depends_on:
      - mongo-rs0-2
      - mongo-rs0-3
    restart: always

  # This configures the MongoDB replicaset
  mongo-setup:
    image: mongo:3.0.6
    container_name: mongo-setup
    depends_on:
      - mongo-rs0-1
      - mongo-rs0-2
      - mongo-rs0-3
    volumes:
      - ./.docker/mongodb/mongod.conf:/etc/mongod.conf
      - ./scripts/mongo-rs-setup.sh:/scripts/setup.sh
    entrypoint: [ "/scripts/setup.sh" ]


  elasticsearch:
    hostname: elasticsearch
    image: stabenfeldt/elasticsearch-marvel
    container_name: elasticsearch
    ports:
      - "29200:9200"
      - "29300:9300"
    depends_on:
      - mongo-rs0-1
      - mongo-rs0-2
      - mongo-rs0-3
    volumes:
      - ELASTICSEARCH_DATA:/usr/share/elasticsearch/data
      - ./elasticsearch/logging.yml:/etc/elasticsearch/logging.yml
    restart: always


  elasticsearch-hq:
    image: elastichq/elasticsearch-hq
    container_name: elasticsearch_hq
    ports:
      - "25000:5000"
    environment:
      - HQ_DEFAULT_URL=http://elasticsearch:29200
    depends_on:
      - elasticsearch


  mariadb:
    image: "mariadb:10"
    container_name: mariadb
    environment:
      - MYSQL_USER=root
      - MYSQL_ROOT_PASSWORD=secret-pwd
    ports:
      - "23306:3306"
    volumes:
      - SQL_DATA:/var/lib/data
    restart: always


  redis-master:
    container_name: redis-master
    image: redis:5-alpine
    ports:
      - "26379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=my_password
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    volumes:
      - REDIS_MASTER_DATA:/data
    restart: always


  redis-slave:
    container_name: redis-slave
    image: redis:5-alpine
    depends_on:
      - redis-master
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    volumes:
      - REDIS_SLAVE_DATA:/data

  redis-sentinel-1:
    container_name: redis-sentinel-1
    build: redis-sentinel
    depends_on:
      - redis-master

  redis-sentinel-2:
    container_name: redis-sentinel-2
    build: redis-sentinel
    depends_on:
      - redis-master

  webdis:
    container_name: webdis
    image: anapsix/webdis
    ports: 
      - "27379:7379"
    depends_on: 
      - "redis-master"
    restart: always


  ###################################################################
  # Make sure you include either mongo-connector OR transporter.
  #
  #

  # mongo-connector
  # https://github.com/10gen-labs/mongo-connector
  #connector:
  #  image: python:latest
  #  depends_on:
  #    - mongo-rs0-1
  #    - mongo-rs0-2
  #    - mongo-rs0-3
  #    - elasticsearch:elasticsearch
  #  volumes:
  #    - ./scripts:/scripts
  #  entrypoint: [ "/scripts/mongo-connector.sh" ]


  # Transporter
  #
  # https://github.com/compose/transporter
  # https://www.compose.io/articles/transporter-driving-part-one/
  transporter:
    image: golang:1.5
    container_name: mongolastic-transporter
    depends_on:
      - mongo-rs0-1
      - mongo-rs0-2
      - mongo-rs0-3
      - elasticsearch
    volumes:
      - ./transporter:/transporter
      - ./scripts:/scripts
    entrypoint: [ "/transporter/run.sh" ]
    restart: always


  # Make sure ES does not rellocate it's shards when it has low disk space.
  disabledisktreshold:
    image: mongo:3.0.6
    container_name: mongolastic-disable_disk_treshold
    depends_on:
      - elasticsearch
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "/scripts/disable-disk-treshold.sh" ]


  # Verify reading and writing
  # Run 'docker logs -f mongolastic-verify' to see what it outputs.
  verify:
    image: mongo:3.0.6
    container_name: mongolastic-verify
    depends_on:
      - mongo-rs0-1
      - mongo-rs0-2
      - mongo-rs0-3
      - elasticsearch
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "/scripts/query.sh" ]
